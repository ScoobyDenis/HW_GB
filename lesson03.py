# 1. Реализовать функцию, принимающую два числа (позиционные аргументы)
# и выполняющую их деление. Числа запрашивать у пользователя,
# предусмотреть обработку ситуации деления на ноль.

def division(a, b):
    try:
        return round(a / b, 2)
    except ZeroDivisionError:
        return "на ноль делить нельзя"

a = float(input("Введите делимое: "))
b = float(input("Введите делитель: "))

print(division(a, b))

# 2. Выполнить функцию, которая принимает несколько параметров,
# описывающих данные пользователя: имя, фамилия, год рождения,
# город проживания, email, телефон. Функция должна принимать
# параметры как именованные аргументы. Осуществить вывод данных
# о пользователе одной строкой.

def info(name, surname, year, city, email, phone):
    return surname, name, year, city, email, phone

name = 'Vasya'
surname = "Ivanov"
year = "50"
city = "London"
email = "vasya_the_best_guy_in_london.mail@.ru"
phone = "88005553535"

print(*info(name, surname, year, city, email, phone))

# 3. Реализовать функцию my_func(),
# которая принимает три позиционных аргумента
# и возвращает сумму наибольших двух аргументов.

def my_func(a,b,c):
    if a < b and a < c:
        return b+c
    elif b < a and b < c:
        return a+c
    else:
        return a+b
print("Введите целые числа(каждое с новой строки): ")
a, b, c = int(input()), int(input()), int(input())
print("Сумма наибольших двух аргументов:", my_func(a,b,c))

# 4. Программа принимает действительное положительное число
# x и целое отрицательное число y. Выполните возведение числа
#  x в степень y. Задание реализуйте в виде функции my_func(x, y).
#   При решении задания нужно обойтись без встроенной функции
#   возведения числа в степень.
# Подсказка: попробуйте решить задачу двумя способами.
# Первый — возведение в степень с помощью оператора **.
# Второй — более сложная реализация без оператора **,
#  предусматривающая использование цикла.

def my_func_1(x, y):

    return round(x**y, 4)

def my_func_2(x, y):
    res = 1
    for i in range(abs(y)):
        res *= x
    if y < 0:
        return round(1/res, 4)
    else:
        return res

x = int(input("Введите действительное положительное число "))
y = int(input("Введите целое отрицательное число "))
print(my_func_1(x,y))
print(my_func_2(x,y))

# 5. Программа запрашивает у пользователя строку чисел, разделённых пробелом.
# При нажатии Enter должна выводиться сумма чисел. Пользователь может
#  продолжить ввод чисел, разделённых пробелом и снова нажать Enter.
#  Сумма вновь введённых чисел будет добавляться к уже подсчитанной сумме.

def summ(n):
    return sum(n)

nums = list(map(int, input("Введите целые числа через пробел: ").split()))

s = sum(nums)
print("Сумма чисел равна: ", s)
tryies = input("Хотите ввести еще числа?(y/n) ").lower()
while tryies == "y":
    nums = list(map(int, input("Введите целые числа через пробел: ").split()))
    s += sum(nums)
    print("Сумма чисел равна: ", s)
    tryies = input("Хотите ввести еще числа?(y/n) ").lower()
else:
    print("Подсчет окончен")
    print("Сумма чисел равна: ", s)

# 6. Реализовать функцию int_func(), принимающую слова из
# маленьких латинских букв и возвращающую их же, но с
# прописной первой буквой. Например, print(int_func(‘text’)) -> Text.

def int_func(word):
    return word.title()

print(int_func(input("Введите слово: ")))

# 7. Продолжить работу над заданием. В программу должна попадать
# строка из слов, разделённых пробелом. Каждое слово состоит из
# латинских букв в нижнем регистре. Нужно сделать вывод исходной
# строки, но каждое слово должно начинаться с заглавной буквы.
# Используйте написанную ранее функцию int_func().

def int_func(*words):
    words = input("Введите слова через пробел ").title()
    print(words)

int_func()

               